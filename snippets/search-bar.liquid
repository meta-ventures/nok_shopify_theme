<!-- /snippets/search-bar.liquid -->
{% comment %}

  A snippet to include a search bar anywhere in your theme.
  Note we are using 'input-group' for the layout. Look under Forms > Input Groups for some demos.

  More information:
   - http://docs.shopify.com/themes/liquid-variables/search

  To return only products in results:
    - http://docs.shopify.com/manual/configuration/store-customization/return-only-product-in-storefront-search-results
    - Or manually add type=product to the search URL as a query parameter
    - Uncomment hidden input with value="product" below

{% endcomment %}
<div class="search-rap">
    <form action="/search" method="get" class="search-bar" role="search">
      <div class="form-search">
        <input type="hidden" name="type" value="product">
        <input type="hidden" name="options[unavailable_products]" value="show">
        <input type="hidden" name="options[prefix]" value="last">
        <input type="search" name="q" value="{{ search.terms | escape }}" placeholder="{{ settings.search_bar_placeholder }}" id="search" class="input-text" aria-label="{{ 'general.search.placeholder' | t }}" required>
        <button class="search-btn" type="submit"><i class="ri-search-line"></i></button>
      </div>
    </form>
</div>

{% comment %}
<form action="/search" method="get" class="input-group search-bar" role="search">
  <input type="hidden" name="type" value="product">
  <input type="search" name="q" value="{{ search.terms | escape }}" placeholder="{{ 'general.search.placeholder' | t }}" class="input-group-field" aria-label="{{ 'general.search.placeholder' | t }}">
  <span class="input-group-btn">
    <button type="submit" class="btn icon-fallback-text">
      <span class="icon icon-search" aria-hidden="true"></span>
      <span class="fallback-text">{{ 'general.search.submit' | t }}</span>
    </button>
  </span>
</form>
{% endcomment %}
<style>
  .search-rap a.search-crap{
    display: block;
    font-size: 16px;
    line-height: 0;
  }
  .search-rap a.search-crap[aria-expanded="false"]{
    color: var(--font-color-header);
  }
  .search-rap a.search-crap:hover,
  .search-rap a.search-crap[aria-expanded="true"]{
    color: var(--font-color-primary);
  }
  .search-rap a.search-crap[aria-expanded="true"] i::before{
    content: "\f5af"
  }
  .search-rap .form-search{
    min-width: 200px;
    position: relative;
    display: flex;
  }
  .search-rap .form-search input.input-text{
    width: 100%;
    padding: 0;
    border: none;
    padding-bottom: 5px;
    text-transform: uppercase;
    {%- if template == 'index' -%}
    color: {{ section.settings.header_text_color }};
    border-bottom: 1px solid rgba(255,255,255,30%);
    {%- else -%}
    color: {{ section.settings.other_header_text_color }};
    border-bottom: 1px solid rgba(0,0,0,30%);
    {%- endif -%}
    background-color: transparent;
  }
  .search-rap .form-search input.input-text::placeholder{
    {%- if template == 'index' -%}
    color: {{ section.settings.header_text_color }};
    {%- else -%}
    color: {{ section.settings.other_header_text_color }};
    {%- endif -%}
  }
  
  .search-rap .form-search button{
    {%- if template == 'index' -%}
    color: {{ section.settings.header_text_color }};
    {%- else -%}
    color: {{ section.settings.other_header_text_color }};
    {%- endif -%}
    position: absolute;
    font-size: 14px;
    {% if settings.enable_rtl %}
    left: 0;
    {% else %}
    right: 0;
    {% endif %}
  }
  .is-sticky .search-rap .form-search button,
  .is-sticky .search-rap .form-search input.input-text::placeholder,
  .is-sticky .search-rap .form-search input.input-text{
    color: {{ section.settings.other_header_text_color }};
  }
  .is-sticky .search-rap .form-search input.input-text{
    border-bottom: 1px solid rgba(0,0,0,30%);
  }
  @media(max-width: 1199px){
    .search-rap{
      display: none;
    }
  }
</style>
